
@model JoolServerApp.Web.ViewModels.CreateVM
@{
    ViewBag.Title = "Login";
}
@section Scripts
{
    <link href="~/Content/Styles/Login.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
}


<body>
    <link href="~/Content/Styles/Login2.css" rel="stylesheet" />
    <div class="d-flex justify-content-end">
        <button type="button" id="signUp" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#signUpModal">
            Sign Up
        </button>
    </div>
    <div id="login">
        <div class="logoDiv">
            <img id="logo" src="~/Content/Images/JooleSVG.svg" />
            <h1 id="slogan">Building Product Selection Platform</h1>
        </div>
        <form class="form-group" action="">
            <i class="bi bi-person-fill pageIcon"></i>
            <input id="usernameLogin" type="text" class="form-control input" placeholder="Username or Email" />
            <i class="bi bi-lock-fill pageIcon"></i>
            <input id="passwordLogin" type="text" class="form-control input" placeholder="Password" />
            <div class="d-flex justify-content-end">
                <button id="loginBtn" type="submit" class="btn btn-primary">Log In</button>
            </div>
        </form>
    </div>


    <!-- Button trigger modal -->

    <!-- Modal -->
    <div class="modal fade" id="signUpModal" tabindex="-1" aria-labelledby="signUpModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h2>Create</h2>

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Register</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*<div class="form-group">
        @Html.LabelFor(model => model.User_ID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.User_ID, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.User_ID, "", new { @class = "text-danger" })
        </div>
                </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.User_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User_Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User_Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.User_Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User_Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User_Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.User_Image, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.User_Image, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.User_Image, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.user_Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.user_Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.user_Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.confirm_Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.confirm_Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.confirm_Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @* <div class="form-group">
            @Html.LabelFor(model => model.Credential_ID, "Credential_ID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Credential_ID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Credential_ID, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                    }
                </div>
            </div>
        </div>
    </div>


</body>